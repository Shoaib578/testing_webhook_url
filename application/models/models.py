from datetime import datetime

from sqlalchemy import Column, BigInteger, String, Boolean, Integer, DateTime, JSON
from sqlalchemy.sql import func

from application import db

# Define the User model
class User(db.Model):
    id = Column(BigInteger, primary_key=True,nullable=True)
    email = Column(String(120), nullable=True)
    created_at = Column(DateTime, nullable=True, default=func.now())
    updated_at = Column(DateTime, nullable=True, default=func.now(), onupdate=func.now())
    first_name = Column(String(50), nullable=True)
    last_name = Column(String(50), nullable=True)
    orders_count = Column(Integer, nullable=True)
    state = Column(String(50), nullable=True)
    total_spent = Column(String(50), nullable=True)
    last_order_id = Column(BigInteger, nullable=True)
    note = Column(String(255), nullable=True)
    verified_email = Column(Boolean, nullable=True)
    multipass_identifier = Column(String(255), nullable=True)
    tax_exempt = Column(Boolean, nullable=True)
    tags = Column(String(255), nullable=True)
    last_order_name = Column(String(50), nullable=True)
    currency = Column(String(3), nullable=True)
    phone = Column(String(20), nullable=True)
    email_marketing_consent = Column(JSON, nullable=True)
    sms_marketing_consent = Column(JSON, nullable=True)
    admin_graphql_api_id = Column(String(255), nullable=True)

    def __repr__(self):
        return f"<User {self.first_name} {self.last_name}>"


# Define the Checkout model (all columns nullable)
class Checkout(db.Model):
    id = db.Column(db.BigInteger, primary_key=True, nullable=True)
    token = db.Column(db.String(255), nullable=True)
    cart_token = db.Column(db.String(255), nullable=True)
    email = db.Column(db.String(120), nullable=True)
    gateway = db.Column(db.String(255), nullable=True)
    buyer_accepts_marketing = db.Column(db.Boolean, nullable=True)
    buyer_accepts_sms_marketing = db.Column(db.Boolean, nullable=True)
    sms_marketing_phone = db.Column(db.String(20), nullable=True)
    created_at = db.Column(db.DateTime, nullable=True, default=datetime.utcnow)
    updated_at = db.Column(db.DateTime, nullable=True, default=datetime.utcnow)
    landing_site = db.Column(db.String(255), nullable=True)
    note = db.Column(db.String(255), nullable=True)
    referring_site = db.Column(db.String(255), nullable=True)
    taxes_included = db.Column(db.Boolean, nullable=True)
    total_weight = db.Column(db.Integer, nullable=True)
    currency = db.Column(db.String(3), nullable=True)
    completed_at = db.Column(db.DateTime, nullable=True)
    phone = db.Column(db.String(20), nullable=True)
    customer_locale = db.Column(db.String(10), nullable=True)
    subtotal_price = db.Column(db.String(50), nullable=True)
    total_price = db.Column(db.String(50), nullable=True)
    total_discounts = db.Column(db.String(50), nullable=True)
    total_tax = db.Column(db.String(50), nullable=True)
    abandoned_checkout_url = db.Column(db.String(255), nullable=True)


# Define the Cart model (all columns nullable)
class Cart(db.Model):
    id = db.Column(db.String(255), primary_key=True, nullable=True)
    token = db.Column(db.String(255), nullable=True)
    line_items = db.Column(db.JSON, nullable=True)
    note = db.Column(db.String(255), nullable=True)
    updated_at = db.Column(db.DateTime, nullable=True)
    created_at = db.Column(db.DateTime, nullable=True)


# Define the Purchase model (all columns nullable)
class Purchase(db.Model):
    id = db.Column(db.BigInteger, primary_key=True, nullable=True)
    admin_graphql_api_id = db.Column(db.String(255), nullable=True)
    app_id = db.Column(db.Integer, nullable=True)
    browser_ip = db.Column(db.String(255), nullable=True)
    buyer_accepts_marketing = db.Column(db.Boolean, nullable=True)
    cancel_reason = db.Column(db.String(255), nullable=True)
    cancelled_at = db.Column(db.DateTime, nullable=True)
    cart_token = db.Column(db.String(255), nullable=True)
    checkout_id = db.Column(db.BigInteger, nullable=True)
    checkout_token = db.Column(db.String(255), nullable=True)
    client_details = db.Column(db.JSON, nullable=True)
    closed_at = db.Column(db.DateTime, nullable=True)
    confirmation_number = db.Column(db.String(255), nullable=True)
    confirmed = db.Column(db.Boolean, nullable=True)
    contact_email = db.Column(db.String(255), nullable=True)
    created_at = db.Column(db.DateTime, nullable=True)
    currency = db.Column(db.String(10), nullable=True)
    current_subtotal_price = db.Column(db.String(20), nullable=True)
    current_subtotal_price_set = db.Column(db.JSON, nullable=True)
    current_total_additional_fees_set = db.Column(db.JSON, nullable=True)
    current_total_discounts = db.Column(db.String(20), nullable=True)
    current_total_discounts_set = db.Column(db.JSON, nullable=True)
    current_total_duties_set = db.Column(db.JSON, nullable=True)
    current_total_price = db.Column(db.String(20), nullable=True)
    current_total_price_set = db.Column(db.JSON, nullable=True)
    current_total_tax = db.Column(db.String(20), nullable=True)
    current_total_tax_set = db.Column(db.JSON, nullable=True)
    customer_locale = db.Column(db.String(20), nullable=True)
    device_id = db.Column(db.String(255), nullable=True)
    discount_codes = db.Column(db.JSON, nullable=True)
    duties_included = db.Column(db.Boolean, nullable=True)
    email = db.Column(db.String(255), nullable=True)
    estimated_taxes = db.Column(db.Boolean, nullable=True)
    financial_status = db.Column(db.String(50), nullable=True)
    fulfillment_status = db.Column(db.String(50), nullable=True)
    landing_site = db.Column(db.String(500), nullable=True)
    landing_site_ref = db.Column(db.String(255), nullable=True)
    location_id = db.Column(db.String(255), nullable=True)
    merchant_business_entity_id = db.Column(db.String(255), nullable=True)
    merchant_of_record_app_id = db.Column(db.String(255), nullable=True)
    name = db.Column(db.String(255), nullable=True)
    note = db.Column(db.String(255), nullable=True)
    note_attributes = db.Column(db.JSON, nullable=True)
    number = db.Column(db.Integer, nullable=True)
    order_number = db.Column(db.Integer, nullable=True)
    order_status_url = db.Column(db.String(500), nullable=True)
    original_total_additional_fees_set = db.Column(db.JSON, nullable=True)
    original_total_duties_set = db.Column(db.JSON, nullable=True)
    payment_gateway_names = db.Column(db.JSON, nullable=True)
    phone = db.Column(db.String(50), nullable=True)
    po_number = db.Column(db.String(255), nullable=True)
    presentment_currency = db.Column(db.String(10), nullable=True)
    processed_at = db.Column(db.DateTime, nullable=True)
    reference = db.Column(db.String(255), nullable=True)
    referring_site = db.Column(db.String(500), nullable=True)
    source_identifier = db.Column(db.String(255), nullable=True)
    source_name = db.Column(db.String(255), nullable=True)
    source_url = db.Column(db.String(500), nullable=True)
    subtotal_price = db.Column(db.String(20), nullable=True)
    subtotal_price_set = db.Column(db.JSON, nullable=True)
    tags = db.Column(db.String(500), nullable=True)
    tax_exempt = db.Column(db.Boolean, nullable=True)
    tax_lines = db.Column(db.JSON, nullable=True)
    taxes_included = db.Column(db.Boolean, nullable=True)
    test = db.Column(db.Boolean, nullable=True)
    token = db.Column(db.String(255), nullable=True)
    total_discounts = db.Column(db.String(20), nullable=True)
    total_discounts_set = db.Column(db.JSON, nullable=True)
    total_line_items_price = db.Column(db.String(20), nullable=True)
    total_line_items_price_set = db.Column(db.JSON, nullable=True)
    total_outstanding = db.Column(db.String(20), nullable=True)
    total_price = db.Column(db.String(20), nullable=True)
    total_price_set = db.Column(db.JSON, nullable=True)
    total_shipping_price_set = db.Column(db.JSON, nullable=True)
    total_tax = db.Column(db.String(20), nullable=True)
    total_tax_set = db.Column(db.JSON, nullable=True)
    total_tip_received = db.Column(db.String(20), nullable=True)
    total_weight = db.Column(db.Integer, nullable=True)
    updated_at = db.Column(db.DateTime, nullable=True)
    user_id = db.Column(db.BigInteger, nullable=True)
    billing_address = db.Column(db.JSON, nullable=True)
    customer = db.Column(db.JSON, nullable=True)
    discount_applications = db.Column(db.JSON, nullable=True)
    fulfillments = db.Column(db.JSON, nullable=True)
    line_items = db.Column(db.JSON, nullable=True)
    payment_terms = db.Column(db.JSON, nullable=True)
    refunds = db.Column(db.JSON, nullable=True)
    shipping_address = db.Column(db.JSON, nullable=True)
    shipping_lines = db.Column(db.JSON, nullable=True)